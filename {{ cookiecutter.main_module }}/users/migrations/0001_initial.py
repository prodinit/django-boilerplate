# Generated by Django 3.2.21 on 2023-09-17 16:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('phone_number', models.CharField(blank=True, max_length=16, null=True, unique=True)),
                ('is_phone_number_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=31, null=True)),
                ('state', models.CharField(blank=True, max_length=31, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=12, null=True)),
                ('country', models.CharField(blank=True, choices=[('AW', 'AW'), ('AF', 'AF'), ('AO', 'AO'), ('AI', 'AI'), ('AX', 'AX'), ('AL', 'AL'), ('AD', 'AD'), ('AE', 'AE'), ('AR', 'AR'), ('AM', 'AM'), ('AS', 'AS'), ('AQ', 'AQ'), ('TF', 'TF'), ('AG', 'AG'), ('AU', 'AU'), ('AT', 'AT'), ('AZ', 'AZ'), ('BI', 'BI'), ('BE', 'BE'), ('BJ', 'BJ'), ('BQ', 'BQ'), ('BF', 'BF'), ('BD', 'BD'), ('BG', 'BG'), ('BH', 'BH'), ('BS', 'BS'), ('BA', 'BA'), ('BL', 'BL'), ('BY', 'BY'), ('BZ', 'BZ'), ('BM', 'BM'), ('BO', 'BO'), ('BR', 'BR'), ('BB', 'BB'), ('BN', 'BN'), ('BT', 'BT'), ('BV', 'BV'), ('BW', 'BW'), ('CF', 'CF'), ('CA', 'CA'), ('CC', 'CC'), ('CH', 'CH'), ('CL', 'CL'), ('CN', 'CN'), ('CI', 'CI'), ('CM', 'CM'), ('CD', 'CD'), ('CG', 'CG'), ('CK', 'CK'), ('CO', 'CO'), ('KM', 'KM'), ('CV', 'CV'), ('CR', 'CR'), ('CU', 'CU'), ('CW', 'CW'), ('CX', 'CX'), ('KY', 'KY'), ('CY', 'CY'), ('CZ', 'CZ'), ('DE', 'DE'), ('DJ', 'DJ'), ('DM', 'DM'), ('DK', 'DK'), ('DO', 'DO'), ('DZ', 'DZ'), ('EC', 'EC'), ('EG', 'EG'), ('ER', 'ER'), ('EH', 'EH'), ('ES', 'ES'), ('EE', 'EE'), ('ET', 'ET'), ('FI', 'FI'), ('FJ', 'FJ'), ('FK', 'FK'), ('FR', 'FR'), ('FO', 'FO'), ('FM', 'FM'), ('GA', 'GA'), ('GB', 'GB'), ('GE', 'GE'), ('GG', 'GG'), ('GH', 'GH'), ('GI', 'GI'), ('GN', 'GN'), ('GP', 'GP'), ('GM', 'GM'), ('GW', 'GW'), ('GQ', 'GQ'), ('GR', 'GR'), ('GD', 'GD'), ('GL', 'GL'), ('GT', 'GT'), ('GF', 'GF'), ('GU', 'GU'), ('GY', 'GY'), ('HK', 'HK'), ('HM', 'HM'), ('HN', 'HN'), ('HR', 'HR'), ('HT', 'HT'), ('HU', 'HU'), ('ID', 'ID'), ('IM', 'IM'), ('IN', 'IN'), ('IO', 'IO'), ('IE', 'IE'), ('IR', 'IR'), ('IQ', 'IQ'), ('IS', 'IS'), ('IL', 'IL'), ('IT', 'IT'), ('JM', 'JM'), ('JE', 'JE'), ('JO', 'JO'), ('JP', 'JP'), ('KZ', 'KZ'), ('KE', 'KE'), ('KG', 'KG'), ('KH', 'KH'), ('KI', 'KI'), ('KN', 'KN'), ('KR', 'KR'), ('KW', 'KW'), ('LA', 'LA'), ('LB', 'LB'), ('LR', 'LR'), ('LY', 'LY'), ('LC', 'LC'), ('LI', 'LI'), ('LK', 'LK'), ('LS', 'LS'), ('LT', 'LT'), ('LU', 'LU'), ('LV', 'LV'), ('MO', 'MO'), ('MF', 'MF'), ('MA', 'MA'), ('MC', 'MC'), ('MD', 'MD'), ('MG', 'MG'), ('MV', 'MV'), ('MX', 'MX'), ('MH', 'MH'), ('MK', 'MK'), ('ML', 'ML'), ('MT', 'MT'), ('MM', 'MM'), ('ME', 'ME'), ('MN', 'MN'), ('MP', 'MP'), ('MZ', 'MZ'), ('MR', 'MR'), ('MS', 'MS'), ('MQ', 'MQ'), ('MU', 'MU'), ('MW', 'MW'), ('MY', 'MY'), ('YT', 'YT'), ('NA', 'NA'), ('NC', 'NC'), ('NE', 'NE'), ('NF', 'NF'), ('NG', 'NG'), ('NI', 'NI'), ('NU', 'NU'), ('NL', 'NL'), ('NO', 'NO'), ('NP', 'NP'), ('NR', 'NR'), ('NZ', 'NZ'), ('OM', 'OM'), ('PK', 'PK'), ('PA', 'PA'), ('PN', 'PN'), ('PE', 'PE'), ('PH', 'PH'), ('PW', 'PW'), ('PG', 'PG'), ('PL', 'PL'), ('PR', 'PR'), ('KP', 'KP'), ('PT', 'PT'), ('PY', 'PY'), ('PS', 'PS'), ('PF', 'PF'), ('QA', 'QA'), ('RE', 'RE'), ('RO', 'RO'), ('RU', 'RU'), ('RW', 'RW'), ('SA', 'SA'), ('SD', 'SD'), ('SN', 'SN'), ('SG', 'SG'), ('GS', 'GS'), ('SH', 'SH'), ('SJ', 'SJ'), ('SB', 'SB'), ('SL', 'SL'), ('SV', 'SV'), ('SM', 'SM'), ('SO', 'SO'), ('PM', 'PM'), ('RS', 'RS'), ('SS', 'SS'), ('ST', 'ST'), ('SR', 'SR'), ('SK', 'SK'), ('SI', 'SI'), ('SE', 'SE'), ('SZ', 'SZ'), ('SX', 'SX'), ('SC', 'SC'), ('SY', 'SY'), ('TC', 'TC'), ('TD', 'TD'), ('TG', 'TG'), ('TH', 'TH'), ('TJ', 'TJ'), ('TK', 'TK'), ('TM', 'TM'), ('TL', 'TL'), ('TO', 'TO'), ('TT', 'TT'), ('TN', 'TN'), ('TR', 'TR'), ('TV', 'TV'), ('TW', 'TW'), ('TZ', 'TZ'), ('UG', 'UG'), ('UA', 'UA'), ('UM', 'UM'), ('UY', 'UY'), ('US', 'US'), ('UZ', 'UZ'), ('VA', 'VA'), ('VC', 'VC'), ('VE', 'VE'), ('VG', 'VG'), ('VI', 'VI'), ('VN', 'VN'), ('VU', 'VU'), ('WF', 'WF'), ('WS', 'WS'), ('YE', 'YE'), ('ZA', 'ZA'), ('ZM', 'ZM'), ('ZW', 'ZW')], max_length=2, null=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('PREFER_NOT_TO_RESPOND', 'Prefer not to respond')], max_length=22, null=True)),
                ('auth_provider', models.CharField(choices=[('EMAIL', 'email'), ('PHONE_NUMBER', 'phone_number'), ('GOOGLE', 'google'), ('GITHUB', 'github')], default='EMAIL', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('-created_at',),
            },
            managers=[
                ('objects', users.managers.UserAllObjectsManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('User', 'User')], default='User', max_length=16)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
